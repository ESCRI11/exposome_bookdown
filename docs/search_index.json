[
["index.html", "exposomeShiny User’s Guide 1 Overview", " exposomeShiny User’s Guide Escribà Montagut, Xavier; González, Juan R. 2020-09-28 1 Overview exposomeShiny is a data analysis toolbox with the following features: Data handling: imputation, LOD, transformation, … Exposome characterization Exposome-wide association analysis Multivariate association Omic data integration Post-omic data analysis: CTD database To do so, exposomeShiny relies on previously existent Bioconductor packages (rexposome, omicRexposome and CTDquerier), it uses them in a seamless way so the final user of exposomShiny can perform the same studies that would conduct using the Bioconductor packages but without writing a single line of code. "],
["setup.html", "2 Setup 2.1 Pulling the official Docker image from DockerHub 2.2 Downloading the source files, installing the libraries and running the application", " 2 Setup There are two different ways of seting up and using exposomeShiny 2.1 Pulling the official Docker image from DockerHub The easiest way of using exposomeShiny is using Docker. There’s an official image on DockerHub to be downloaded and executed. This method is specially easy for users running Mac OS X / Linux on their machines, as Docker can be easily installed from the official website. For Windows Users there can be some problems if the version is not updated and/or it’s a Windows Home installation, there’s official documentation explaining how to install it. For Windows users, once Docker has been installed, follow this two guides to be able to send bash commands to operate Docker containers 1, 2. To download and launch exposomeShiny, execute the following command on a bash terminal(make sure Docker is running, if not search for the Docker Desktop app and launch it). docker run --rm -p 80:80 brgelab/exposome-shiny This command will download the Docker image of exposomeShiny (be aware it weights ~ 3 GB, so if your internet connection is slow it may take a while) and run a container with it. The container will be exposed on the local port 80 and it will render on that port the application itself, so to start using exposomeShiny open your web browser and go to the site localhost:80 At the beginning it may take some time for the application to render, this is because all the needed R libraries are being loaded, to be sure the container is actually working, take a look at the terminal where you inputed the Docker command, there you will see all the R verbose stating the libraries are being loaded. Once the user has finished using exposomeShiny, the container needs to be stopped to avoid wasting CPU resources, to do so, input the following command on a bash terminal (the command needs to be inputed on a new bash window): docker container ls This will prompt all the running containers, find the one with the NAMES brgelab/exposome-shiny and copy it’s CONTAINER ID, then input the following bash command: docker stop xxxxxxxxxxxx Where xxxxxxxxxxxx is the CONTAINER ID. To run the application again, just enter the first bash command (docker run --rm -p 80:80 brgelab/exposome-shiny), since it has already been downloaded, the application is cached on the computer and it will launch straight away. If the user wants to remove the Docker image from the computer, input the following bash command: docker image rm brgelab/exposome-shiny 2.2 Downloading the source files, installing the libraries and running the application The user can choose to download the source code of the shiny application and install all the required libraries on their local R installation. Make sure to install Rtools to use this method. It is advised to always use the Docker method to use exposomeShiny, as it only requires installing Docker and running a single command to run exposomeShiny. This second method can yield to some installation errors on some machines and it’s overall less reliable, while Docker will always work. # Set working directory setwd(dir = &quot;/some/path/&quot;) # Download zip download.file(url = &quot;https://github.com/isglobal-brge/exposomeShiny/archive/master.zip&quot;, destfile = &quot;master.zip&quot;) # Unzip the .zip to the working directory unzip(zipfile = &quot;master.zip&quot;) # Set the working directory inside the downloaded folder setwd(dir = &quot;/some/path/exposomeShiny-master&quot;) Now all the source files are downloaded to the location of chose and the working directory moved to the correct folder, to start the project, open the Rproj file by clicking it on the Files explorer of RStudio. Once the project is loaded, the file found on the source folder called installer.R has to be sourced and run. This will install the newest versions of the packages required by Exposome Shiny on this R session. To do so, run the following code on the RStudio console. source(&quot;installer.R&quot;) This is only needed on the first run, once completed it doesn’t need to be done prior to launching the application itself any other time. Now everything is ready to launch the Shiny application. To do so there a two approaches, one is to open the ui.R or the server.R files that are inside the R folder and press Run App. Or the other option is to input the following command on the console. shiny::runApp(&#39;R&#39;) "],
["data-sets.html", "3 Data sets 3.1 Exposome dataset 3.2 Omics dataset", " 3 Data sets 3.1 Exposome dataset The exposome is composed of three different files (in *.csv format). Those files are refered inside the Shiny as exposures, description and phenotypes. Their content is the following: The exposures file contains the measures of each exposure for all the individuals included on the analysis. It is a matrix-like file having a row per individual and a column per exposures. It must includes a column with the subject’s identifier. The description file contains a row for each exposure and, at last, defined the families of exposures. Usually, this file incorporates a description of the exposures, the matrix where it was obtained and the units of measurement among others. The phenotypes file contains the covariates to be included in the analysis as well as the health outcomes of interest. It contains a row per individual included in the analysis and a column for each covariate and outcome. Moreover, it must include a column with the individual’s identifier. A visual representation of the three matrices and how they correlate is the following. Exposures data file example: id bde100 bde138 bde209 PFOA ... sub01 2.4665 0.7702 1.6866 2.0075 ... sub02 0.7799 1.4147 1.2907 1.0153 ... sub03 -1.6583 -0.9851 -0.8902 -0.0806 ... sub04 -1.0812 -0.6639 -0.2988 -0.4268 ... sub05 -0.2842 -0.1518 -1.5291 -0.7365 ... ... ... ... ... ... Description data file example: exposure family matrix description bde100 PBDEs colostrum BDE 100 - log10 bde138 PBDEs colostrum BDE 138 - log10 bde209 PBDEs colostrum BDE 209 - log10 PFOA PFAS cord blood PFOA - log10 PFNA PFAS cord blood PFNA - log10 PFOA PFAS maternal serum PFOA - log10 PFNA PFAS maternal serum PFNA - log10 hg Metals cord blood hg - log 10 Co Metals urine Co (creatinine) - log10 Zn Metals urine Zn (creatinine) - log10 Pb Metals urine Pb (creatinine) - log10 THM Water --- Average total THM uptake - log10 CHCL3 Water --- Average Chloroform uptake - log10 BROM Water --- Average Brominated THM uptake - log10 NO2 Air --- NO2 levels whole pregnancy- log10 Ben Air --- Benzene levels whole pregnancy- log10 Phenotypes data file example: id asthma BMI sex age ... sub01 control 23.2539 boy 4 ... sub02 asthma 24.4498 girl 5 ... sub03 asthma 15.2356 boy 4 ... sub04 control 25.1387 girl 4 ... sub05 control 22.0477 boy 5 ... ... ... ... ... ... 3.2 Omics dataset The omics data inputed to the Shiny must be provided as an *.RData. This file has to contain an ExpressionSet, which is an S4 object. This object is a data container of the Bioconductor toolset. For further information on ExpressionSet and how to create and manipulate them, please visit the official documentation and this selected vignette. "],
["bioconductor-packages.html", "4 Bioconductor packages 4.1 rexposome 4.2 omicRexposome 4.3 CTDquerier", " 4 Bioconductor packages This Shiny application is a front end support for other Bioconductor packages in order to provide a comfortable environment on to conduct different analysis with those packages. In concrete the packages are rexposome, omicRexposome and CTDquerier. 4.1 rexposome Rexposome is a package that allows to explore the exposome and to perform association analyses between exposures and health outcomes. 4.2 omicRexposome OmicRexposome is a package that systematizes the association evaluation between exposures and omic data, taking advantage of MultiDataSet for coordinated data management, rexposome for exposome data definition and limma for association testing. Also to perform data integration mixing exposome and omic data using multi co-inherent analysis (omicade4) and multi-canonical correlation analysis (PMA). 4.3 CTDquerier CTDquerier is a package to retrieve and visualize data from the Comparative Toxicogenomics Database. The downloaded data is formated as DataFrames for further downstream analyses. "],
["analysis-flowcharts.html", "5 Analysis flowcharts 5.1 Exposome analysis 5.2 Exposome-Omic analysis", " 5 Analysis flowcharts 5.1 Exposome analysis As any user would need to do using the Bioconductor packages (rexposome, omicRexposome and CTDquerier) when performing an analysis using an R script, there is some kind of flow (or pipeline) to follow in order to get to the results, this is also true on rexposomeShiny, even though it’s a seamless and codeless integration of the packages there’s still some need for a flowchart to get the desired results. All the required flowcharts will be detailed with a box flowchart as well as screenshots of exposomeShiny in order to provide extra guidance if needed. 5.1.1 LOD imputation Input the exposures, description and phenotypes files and load them into the application. If exposomeShiny detects LODs (limit of detection) on the exposures file (exposures with value: -1), it will prompt the table with the exposures with LOD and double clicking on the desired cell will enable edit mode to input the instrument LOD. There’s also the option of selecting “Random imputation” on the imputation method in order to imputate with random values instead of LOD/sqrt(2). 5.1.2 Missing imputation Once the dataset is loaded into the Shiny, look at the “Missing Data” tab to check the percentages of missing data for each exposure present. To impute the missing values select “Impute missing values using mice”. After the process finishes, the expect output should be a new missing data graph where there’s no missing of any exposure. The new imputed exposures set can be downloaded as a *.csv file, please note that the downloaded file just assigns numbers to the idnum column, if the data you are using has different idnum format it’s needed to format it properly so that it matches the idnum on the phenotypes input file when inputting it to the Shiny. 5.1.3 Normality correction Once the dataset is loaded into the Shiny, look at the “Check Normality” tab to check which exposures are not normal (Normality = false). By selection from the table the desired exposure and clicking the “Plot histogram of selected exposure”, as the label of the button implies, a histogram of the selected exposure from the table can be seen. By clicking the “Show false” button, all the non normal exposures are listed with the method that will be applied to normalize, this table can be edited (the “Normalization method” column) by double clicking on the desired row. There are three possible methods to use, “log” (default), “^1/3” and “sqrt”. If no method is desired to be applied to an exposure input “none”. Click “Normalize” and the normalization method selected will be applied, the table on the “Check Normality” tab will be updated with the results of the normalization. 5.1.4 Exposures description To see all the insights of the exposures dataset loaded into the Shiny, once loaded it check the exposures description tab, there are three options to dig into the dataset, the family (family of the exposure) to visualize and two grouping factors (phenotypes). 5.1.5 PCA Analysis To see the results of a PCA (principal component analysis) study, load the data and check the PCA Visualization tab, there a set and grouping factor can be choose, it’s important noting (as it’s already stated on the Shiny) that the grouping parameter only works when the set is selected to “samples”. If the association of the PCA analysis with the exposures is desired to visualize, check the “PCA association with exposures” tab, there are two grouping methods to visualize, the phenotypes to principal components and the exposures to principal components. 5.1.6 Clusterization and correlation of exposures To see the results of the exposure correlation and clustering, select the corresponding tab to each analysis. For the exposure correlation analysis there are two visualizations, the matrix representation and the circos. 5.1.7 ExWAS To perform an ExWAS (exposome-wide association) study, check the ExWAS tab and select the addecuate parameters for the ExWAS plot, there are two different plot representations, the output variable to choose (phenotype), the output family and as many covariables (phenotypes) as the user wants. There are internal checks to advise the user on which parameters to select depending if the selected outcome is numerical or bionomial. 5.1.8 ExWAS - CTDquerier The ExWAS tab also is able to perform a CTD query of the desired chemicals. To perform a CTDquerier of chemicals with the results of the ExWAS, click on the desired exposure to preload it into the query, when clicked, a chemical name with it’s associated P-Value will appear on the table on the right, if that’s the desired chemical to add to the query list click “Add to querier”. In the case of adding an unwanted chemical to the query list, select it (or them) by clicking on the Querier list and click on “Remove from querier”. To do the query of the chemicals to de CTD database click on “Query on the CTD gene database” and see the results on the “Chemical CTDquerier Results” subtab. It’s important noting that on the “Kegg pathways” and “Go terms” the input field corresponds to the negative exponent of the filter. 5.1.9 Multivariate ExWAS To perform a multivariate ExWAS study, check the Multivariate ExWAS tab and select the desired output parameter, click on run model to generate the plot. As on the ExWAS plot options there’s implemented an internal check to advise the user on which parameters to select depending if the selected outcome is numerical or bionomial, as the diagrams states if the dataset has not been imputed the missings, it will automatically do it to perform the Multivariate ExWAS, however when closing the plot the imputed dataset will be removed from the environment, so all the other studies performed afterwards will not be altered. 5.2 Exposome-Omic analysis It’s important noting that the maximum size of the omics data is 30 MB, if the omics file to be analyzed is bigger, change the line number 2 of the server.R file. # the &quot;30&quot; refers to 30MB, change as needed options(shiny.maxRequestSize=30*1024^2) 5.2.1 Association analysis Do first the proceeding of exposome data load and corresponding treatment if desired, then proceed to load the omic dataset on the “Data Entry” subtab of the “Omic Data” tab. The omic data should be provided as a *.RData file. The exposome dataset can be subseted by families, on the “Exposome subsetting” subtab select the families that are desired to be included in this new set to study, if all the families are desired just don’t input any and proceed to click the “Subset and add”, which will trigger the action to combine the subsetted (or not) exposome dataset with the provided omic dataset. Select the variables for the association analysis and if SVA is wanted on the “Association model” subtab. There are tabs to visualize the results of running the association model, all of the are on the “Model visualization” subtab. The “Results table” shows the gene, log of the fold change, p-value and adjusted p-value. The “Significant hits” shows the exposure, hits and lambda. The QQ Plot shows a QQ plot (expected vs. observed -lo10(p-value)) for the selected exposure. The Volcan plot shows a volcan plot (log2(fold change) vs -log10(p-value)). For this plot there are two input cells to adjust the horizontal and verital limit lines to filter out the results. 5.2.2 CTD querier To perform a CTD querier study of the exposome-omic analysis, as before, load both datasets and run the desired model with them, check the Volcan plot and click on the desired point on the Volcan plot, the information of the selected plot will appear on the table below the plot (sometimes there are many points close so more than one rows can appear on the table), select from the table the desired point to add to the query and click “Add to querier”. It’s important noting that when trying to add to the querier the Shiny will find on the fields of the omic dataset that the user specifies on top of the plot. If the search does not return any symbol a prompt will appear, however if it’s found it will be added to the lower table corresponding to the genes to query. If by mistake some gene (or genes) were introduced to the querier, select them by clicking on the table row and click “Remove from querier”. Click on “Query selected genes on the CTD gene database” to perform the query of all the symbols of the querier list. To visualize the results of the query, go to the “CTDquerier results” subtab. There are six tabs showing different results interpretations. First there’s the “Lost &amp; found” tab which a plot to see the amount of genes found on the CTD database and the ones that were not found them, ther’s also two lists stating the names of them. The diseases tab shows a table of all the associated diseases found on the CTD database. The curated diseases tab shows the table of associated diseases but only shows the ones with direct evidence. The association tab shows information about all the direct evidence associated diseases. Select the disease of interest to see the score and reference count of it. The inference score tab shows the inference score for each gene for a selected disease, the filter parameters puts out the genes with an inference score lower than the selected filter. The association matrix tab shows a matrix of genes vs. chemicals with a heatmap representing the existing papers (references) providing evidence about the association between chemicals and genes. "],
["general-application-functionalities.html", "6 General application functionalities", " 6 General application functionalities This whole Shiny application serves the purpose to perform a various number of exposome and omic analysis with an input set of data. To perform this analysis some operations can performed on the inputed dataset prior to the analysis and so in order to follow track of what exactly has been done or what is loaded on the current session, there’s implemented some sort of state tracker inside the Shiny application. In order to access it, press the icon on the top right of the application When clicking it a dropdown menu appears, inside there are seven different notifications: Exposome dataset: Turns to 100% when an exposome dataset is loaded in the environment. Here’s a graphical example. LOD imputed: Turns to 100% if the exposome dataset is LOD imputed. Missing imputed: Turns to 100% if the exposome dataset has the missings imputed. Normality corrected: Turns to 100% if the exposome dataset is normality corredted. Omics dataset: Turns to 100% when an omics dataset is loaded in the environment. Subset: Turns to 100% (and displays the subset family(ies)) when the exposome dataset is subseted. Model: Turns to 100% (and displays the association variable(s)) when a model is performed for an omics association analysis. Here’s an example of a subset and model information. "],
["references.html", "References", " References "]
]
